# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: shared.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='shared.proto',
  package='sdf',
  syntax='proto3',
  serialized_pb=_b('\n\x0cshared.proto\x12\x03sdf\"h\n\rProcedureType\x12\x1d\n\x04\x63\x61ll\x18\x01 \x01(\x0e\x32\r.sdf.CallTypeH\x00\x12%\n\x08response\x18\x02 \x01(\x0e\x32\x11.sdf.ResponseTypeH\x00\x42\x11\n\x0fprocedure_types\")\n\x08Observer\x12\x0f\n\x07ip_addr\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05*\xe0\x01\n\x08\x43\x61llType\x12\x08\n\x04READ\x10\x00\x12\n\n\x06NOTIFY\x10\x01\x12\x07\n\x03RUN\x10\x02\x12\x0c\n\x08REGISTER\x10\x03\x12\t\n\x05WRITE\x10\x04\x12\x13\n\x0fGET_CHANGE_FEED\x10\x05\x12\x0c\n\x08GET_NEXT\x10\x06\x12\r\n\tSUBSCRIBE\x10\x07\x12\x08\n\x04PUSH\x10\x08\x12\x08\n\x04PULL\x10\t\x12\x1b\n\x17RCV_SENSOR_NOTIFICATION\x10\n\x12\x1c\n\x18RCV_STORAGE_NOTIFICATION\x10\x0b\x12\r\n\tANALYTICS\x10\x0c\x12\x0c\n\x08\x41\x43TIVATE\x10\r*\xd1\x01\n\x0cResponseType\x12\x0b\n\x07SUCCESS\x10\x00\x12\t\n\x05\x45RROR\x10\x01\x12\x14\n\x10REGISTER_SUCCESS\x10\x02\x12\x12\n\x0eREQUESTED_DATA\x10\x03\x12\x14\n\x10UNKNOWN_ITERATOR\x10\x04\x12\r\n\tNEXT_ITEM\x10\x05\x12\x11\n\rFEED_ITERATOR\x10\x06\x12\x15\n\x11SUBSCRIBE_SUCCESS\x10\x07\x12\x10\n\x0cPUSH_SUCCESS\x10\x08\x12\x0b\n\x07NO_DATA\x10\t\x12\x11\n\rTOPIC_UPDATES\x10\nb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_CALLTYPE = _descriptor.EnumDescriptor(
  name='CallType',
  full_name='sdf.CallType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='READ', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOTIFY', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RUN', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REGISTER', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WRITE', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GET_CHANGE_FEED', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GET_NEXT', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUBSCRIBE', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PUSH', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PULL', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RCV_SENSOR_NOTIFICATION', index=10, number=10,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RCV_STORAGE_NOTIFICATION', index=11, number=11,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ANALYTICS', index=12, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTIVATE', index=13, number=13,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=171,
  serialized_end=395,
)
_sym_db.RegisterEnumDescriptor(_CALLTYPE)

CallType = enum_type_wrapper.EnumTypeWrapper(_CALLTYPE)
_RESPONSETYPE = _descriptor.EnumDescriptor(
  name='ResponseType',
  full_name='sdf.ResponseType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SUCCESS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REGISTER_SUCCESS', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REQUESTED_DATA', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_ITERATOR', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NEXT_ITEM', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FEED_ITERATOR', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SUBSCRIBE_SUCCESS', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PUSH_SUCCESS', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NO_DATA', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TOPIC_UPDATES', index=10, number=10,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=398,
  serialized_end=607,
)
_sym_db.RegisterEnumDescriptor(_RESPONSETYPE)

ResponseType = enum_type_wrapper.EnumTypeWrapper(_RESPONSETYPE)
READ = 0
NOTIFY = 1
RUN = 2
REGISTER = 3
WRITE = 4
GET_CHANGE_FEED = 5
GET_NEXT = 6
SUBSCRIBE = 7
PUSH = 8
PULL = 9
RCV_SENSOR_NOTIFICATION = 10
RCV_STORAGE_NOTIFICATION = 11
ANALYTICS = 12
ACTIVATE = 13
SUCCESS = 0
ERROR = 1
REGISTER_SUCCESS = 2
REQUESTED_DATA = 3
UNKNOWN_ITERATOR = 4
NEXT_ITEM = 5
FEED_ITERATOR = 6
SUBSCRIBE_SUCCESS = 7
PUSH_SUCCESS = 8
NO_DATA = 9
TOPIC_UPDATES = 10



_PROCEDURETYPE = _descriptor.Descriptor(
  name='ProcedureType',
  full_name='sdf.ProcedureType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='call', full_name='sdf.ProcedureType.call', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='response', full_name='sdf.ProcedureType.response', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='procedure_types', full_name='sdf.ProcedureType.procedure_types',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=21,
  serialized_end=125,
)


_OBSERVER = _descriptor.Descriptor(
  name='Observer',
  full_name='sdf.Observer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip_addr', full_name='sdf.Observer.ip_addr', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='port', full_name='sdf.Observer.port', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=127,
  serialized_end=168,
)

_PROCEDURETYPE.fields_by_name['call'].enum_type = _CALLTYPE
_PROCEDURETYPE.fields_by_name['response'].enum_type = _RESPONSETYPE
_PROCEDURETYPE.oneofs_by_name['procedure_types'].fields.append(
  _PROCEDURETYPE.fields_by_name['call'])
_PROCEDURETYPE.fields_by_name['call'].containing_oneof = _PROCEDURETYPE.oneofs_by_name['procedure_types']
_PROCEDURETYPE.oneofs_by_name['procedure_types'].fields.append(
  _PROCEDURETYPE.fields_by_name['response'])
_PROCEDURETYPE.fields_by_name['response'].containing_oneof = _PROCEDURETYPE.oneofs_by_name['procedure_types']
DESCRIPTOR.message_types_by_name['ProcedureType'] = _PROCEDURETYPE
DESCRIPTOR.message_types_by_name['Observer'] = _OBSERVER
DESCRIPTOR.enum_types_by_name['CallType'] = _CALLTYPE
DESCRIPTOR.enum_types_by_name['ResponseType'] = _RESPONSETYPE

ProcedureType = _reflection.GeneratedProtocolMessageType('ProcedureType', (_message.Message,), dict(
  DESCRIPTOR = _PROCEDURETYPE,
  __module__ = 'shared_pb2'
  # @@protoc_insertion_point(class_scope:sdf.ProcedureType)
  ))
_sym_db.RegisterMessage(ProcedureType)

Observer = _reflection.GeneratedProtocolMessageType('Observer', (_message.Message,), dict(
  DESCRIPTOR = _OBSERVER,
  __module__ = 'shared_pb2'
  # @@protoc_insertion_point(class_scope:sdf.Observer)
  ))
_sym_db.RegisterMessage(Observer)


# @@protoc_insertion_point(module_scope)
